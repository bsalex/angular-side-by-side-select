!function(){"use strict";angular.module("angularSideBySideSelect",[])}(),function(){"use strict";angular.module("angularSideBySideSelect").factory("List",function(){function a(a){this.data=[],this.selection=[],this.comparator=a}function b(a,b,c){for(var d=0;d<b.length;d++)if(c(a,b[d]))return d;return-1}return a.prototype={getSelection:function(){return this.selection},select:function(a){this.contains(a)&&-1===b(a,this.selection,this.comparator)&&this.selection.push(a)},deselect:function(a){var c=b(a,this.selection,this.comparator);-1!==c&&this.selection.splice(c,1)},toggle:function(a){-1===b(a,this.selection,this.comparator)?this.select(a):this.deselect(a)},clearSelection:function(){this.selection=[]},getData:function(){return this.data.slice()},setData:function(a){this.data=Array.prototype.slice.call(a||[])},add:function(a){this.data.push(a)},remove:function(a){var c=b(a,this.data,this.comparator);-1!==c&&this.data.splice(c,1)},contains:function(a){return-1!==b(a,this.data,this.comparator)},isSelected:function(a){return-1!==b(a,this.selection,this.comparator)}},a})}(),function(){"use strict";angular.module("angularSideBySideSelect").factory("UniqueList",["List",function(a){function b(){a.apply(this,arguments)}return b.prototype=new a,b.prototype.add=function(b){a.prototype.contains.call(this,b)||a.prototype.add.apply(this,arguments)},b}])}(),function(){"use strict";function a(a,b,c){var d=this;this.comparator=function(b,c){return a.itemsComparator({a:b,b:c})},this.updateModel=function(){a.$emit("targetDataUpdated")},this.sourceList=new b(this.comparator),this.allowDuplicates=a.allowDuplicates,this.targetList=this.allowDuplicates===!1?new c(this.comparator):new b(this.comparator),a.$watch("items",function(a,b){angular.isArray(b)&&d.onSearchChange("")}),this.onGetItems=function(b){if(a.onGetItems)return a.onGetItems({text:b});if("items"in a){if(angular.isArray(a.items))return a.items;throw Error('"items" attribute should be an array.')}throw Error('No data source is set. Use "on-get-items" or "items" attributes.')}}angular.module("angularSideBySideSelect").controller("SideBySideSelectController",["$scope","List","UniqueList",a]);var b=[];a.prototype={initialize:function(){this.onSearchChange("")},onSearchChange:function(a){var b=this.onGetItems(a),c=this;angular.isArray(b)&&(c.sourceList.setData(b),c.sourceList.clearSelection()),angular.isObject(b)&&angular.isFunction(b.then)&&b.then(function(a){c.sourceList.setData(a),c.sourceList.clearSelection()},function(){c.sourceList.setData([]),c.sourceList.clearSelection()})},getSourceItems:function(){if(this.allowDuplicates===!1){for(var a=this.sourceList.getData(),c=a.length;b.length>0;)b.pop();for(var d=0;c>d;d++)this.targetList.contains(a[d])||b.push(a[d]);return b}return this.sourceList.getData()},isInSourceList:function(a){return this.allowDuplicates===!1?!this.targetList.contains(a)&&this.sourceList.contains(a):this.sourceList.contains(a)},isInTargetList:function(a){return this.targetList.contains(a)},getSourceSelection:function(){return this.sourceList.getSelection()},getTargetSelection:function(){return this.targetList.getSelection()},getTargetItems:function(){return this.targetList.getData()},addToTarget:function(a){var b=this;angular.isArray(a)?angular.forEach(a,function(a){b.targetList.add(a)}):b.targetList.add(a),b.sourceList.clearSelection(),b.updateModel()},setTargetItems:function(a){this.targetList.setData(a),this.targetList.clearSelection(),this.updateModel()},removeFromTarget:function(a){var b=this;angular.isArray(a)?angular.forEach(a,function(a){b.targetList.remove(a)}):b.targetList.remove(a),b.targetList.clearSelection(),b.updateModel()},toggleSourceSelection:function(a){this.sourceList.toggle(a)},toggleTargetSelection:function(a){this.targetList.toggle(a)},isSelectedInSource:function(a){return this.sourceList.isSelected(a)},isSelectedInTarget:function(a){return this.targetList.isSelected(a)}}}(),function(){"use strict";angular.module("angularSideBySideSelect").directive("defaultItemDirective",[function(){return{restrict:"E",scope:{item:"=",onSelect:"&",isSelected:"&"},templateUrl:"defaultItemDirective.html"}}])}(),function(){"use strict";angular.module("angularSideBySideSelect").directive("sideBySideSelect",["$compile",function(a){function b(b){a(b)(b.scope())}var c={sourceItemDirective:"source-item-directive",targetItemDirective:"target-item-directive"},d={itemsComparator:function(a){return a.a===a.b},sourceEmptyText:"No items",targetEmptyText:"No items",sourceTitle:"",targetTitle:"",searchFieldPlaceholder:"Search string",showSearchField:!1,allowDuplicates:!1};return{restrict:"E",scope:{onGetItems:"&?",items:"=?",itemsComparator:"&?",sourceEmptyText:"@?",targetEmptyText:"@?",sourceItemDirective:"=?",targetItemDirective:"=?",sourceTitle:"@?",targetTitle:"@?",searchFieldPlaceholder:"=?",showSearchField:"=?",allowDuplicates:"=?"},templateUrl:"sideBySideSelectTemplate.html",controller:"SideBySideSelectController",controllerAs:"sideBySideSelectController",require:["ngModel"],compile:function(a,e){var f=this.itemDirectives||[];return this.itemDirectives=f,angular.forEach(c,function(b,c){c in e||(f[c]="default-item-directive");var d=f[c];if(void 0!==d){var g=angular.element("<"+d+"></"+d+">"),h=a.find(b),i=["item","on-select","is-selected"];angular.forEach(i,function(a){g.attr(a,h.attr(a))}),h.replaceWith(g)}}),{post:function(a,c,e,g){function h(){j.$setViewValue(k.getTargetItems())}function i(d){a.$watch(d,function(a,e){var g=f[d];if(a!==g||void 0===g)return f[d]=a,e===a?void(void 0===g&&b(c)):void b(c)})}angular.forEach(d,function(b,c){c in e||(a[e.$normalize(c)]=b)}),"onGetItems"in e||delete a.onGetItems;var j=g[0],k=a.sideBySideSelectController;j.$formatters.push(function(a){k.setTargetItems(a)}),a.$on("targetDataUpdated",function(){h()}),i("sourceItemDirective"),i("targetItemDirective"),k.initialize()}}}}}])}(),function(){"use strict";angular.module("angularSideBySideSelect").run(["$templateCache",function(a){var b='<div ng-click="onSelect({item: item})"><input type="checkbox" ng-checked="isSelected({item: item})"/> {{item.name}}</div>';a.put("defaultItemDirective.html",b)}])}(),function(){"use strict";angular.module("angularSideBySideSelect").run(["$templateCache",function(a){var b='<div class="side-by-side-select-control">    <div class="side-by-side-select-control__side side-by-side-select-control__side--source">        <div class="side-by-side-select-control__search-form">            <input class="form-control"                    type="text"                    placeholder="{{searchFieldPlaceholder}}"                    ng-show="showSearchField"                    ng-change="sideBySideSelectController.onSearchChange(data.searchString)"                   ng-model="data.searchString"/>        </div>        <div class="side-by-side-select-control__panel side-by-side-select-control__panel--source">            <div ng-show="sourceTitle" class="side-by-side-select-control__panel-heading">{{sourceTitle}}</div>            <div class="side-by-side-select-control__panel-body">                <div ng-hide="sideBySideSelectController.getSourceItems().length">{{sourceEmptyText}}</div>                <div class="side-by-side-select-control__item side-by-side-select-control__item--source"                     ng-class="{\'side-by-side-select-control__item--active\': sideBySideSelectController.isSelectedInSource(item)}"                     ng-repeat="item in sideBySideSelectController.getSourceItems(data.searchString) track by $index"                     ng-show="sideBySideSelectController.getSourceItems(data.searchString).length">                    <source-item-directive                        item="item"                        on-select="sideBySideSelectController.toggleSourceSelection(item)"                        is-selected="sideBySideSelectController.isSelectedInSource(item)">                    </source-item-directive>                </div>            </div>        </div>    </div>    <div class="side-by-side-select-control__arrows">        <button class="side-by-side-select-control__move-button side-by-side-select-control__move-button--add-to-target"                ng-click="sideBySideSelectController.addToTarget(sideBySideSelectController.getSourceSelection())">        </button>        <button class="side-by-side-select-control__move-button side-by-side-select-control__move-button--remove-from-target"                ng-click="sideBySideSelectController.removeFromTarget(sideBySideSelectController.getTargetSelection())">        </button>    </div>    <div class="side-by-side-select-control__side side-by-side-select-control__side--target">        <div class="panel panel-success side-by-side-select-control__panel side-by-side-select-control__panel--target">            <div ng-show="targetTitle" class="side-by-side-select-control__panel-heading">{{targetTitle}}</div>            <div class="side-by-side-select-control__panel-body">                <div ng-hide="sideBySideSelectController.getTargetItems().length">{{targetEmptyText}}</div>                <div class="side-by-side-select-control__item side-by-side-select-control__item--target"                     ng-repeat="item in sideBySideSelectController.getTargetItems() track by $index"                     ng-class="{active: sideBySideSelectController.isSelectedInTarget(item)}"                     ng-show="sideBySideSelectController.getTargetItems().length">                    <target-item-directive                       item="item"                        on-select="sideBySideSelectController.toggleTargetSelection(item)"                        is-selected="sideBySideSelectController.isSelectedInTarget(item)">                    </target-item-directive>                </div>            </div>        </div>    </div></div>';a.put("sideBySideSelectTemplate.html",b)}])}();